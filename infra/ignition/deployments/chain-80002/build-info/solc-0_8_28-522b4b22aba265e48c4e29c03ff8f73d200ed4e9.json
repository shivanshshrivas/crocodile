{
  "_format": "hh3-sol-build-info-1",
  "id": "solc-0_8_28-522b4b22aba265e48c4e29c03ff8f73d200ed4e9",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "userSourceNameMap": {
    "contracts/SpokeRegistry.sol": "project/contracts/SpokeRegistry.sol"
  },
  "input": {
    "language": "Solidity",
    "settings": {
      "evmVersion": "cancun",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "remappings": []
    },
    "sources": {
      "project/contracts/SpokeRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/// @title SpokeRegistry (Sepolia / Polygon Amoy): local writes + (later) dispatch to Hub\r\ncontract SpokeRegistry {\r\n    struct SpokeLog {\r\n        address author;\r\n        bytes32 contentHash;\r\n        uint256 timestamp;\r\n        string  metadata;\r\n    }\r\n\r\n    mapping(bytes32 => SpokeLog) public logs;\r\n\r\n    event SpokeLogPushed(bytes32 indexed logId, address indexed author, bytes32 contentHash, string metadata);\r\n\r\n    function pushSpokeLog(bytes32 logId, bytes32 contentHash, string calldata metadata) external {\r\n        logs[logId] = SpokeLog({\r\n            author: msg.sender,\r\n            contentHash: contentHash,\r\n            timestamp: block.timestamp,\r\n            metadata: metadata\r\n        });\r\n        emit SpokeLogPushed(logId, msg.sender, contentHash, metadata);\r\n        // NEXT: add Hyperlane Mailbox.dispatch(...) to notify Hub on Flow\r\n    }\r\n}\r\n"
      }
    }
  }
}